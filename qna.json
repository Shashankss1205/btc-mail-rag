[
  {"ques": "How many bits is the output of SHA256?", "ans": "256 bits."},
  {"ques": "How many bytes is the output of SHA256?", "ans": "32 bytes."},
  {"ques": "What's needed to calculate the cryptographic hash of the text \"hash me\"?", "ans": "A cryptographic hash function."},
  {"ques": "What are the decimal and the binary representations of the hexadecimal data 061a?", "ans": "061a is 6*256 + (16 + 10) = 1,536 + 26 = 1,562 in decimal form. The binary form of 06 is 0000 0110, and the binary form of 1a is 0001 1010, so the full binary representation is 0000 0110 0001 1010."},
  {"ques": "Can you, in practice, modify the text \"cat\" so the modified text gets the same cryptographic hash as \"cat\"?", "ans": "No. If it was possible, the function wouldn't be second-pre-image-resistant."},
  {"ques": "Which two of the four properties of a cryptographic hash function is the simplistic hash function lacking?", "ans": "Properties 2 and 4 are lacking."},
  {"ques": "What variant of the fourth property is important for stopping an attacker from changing a cat picture on your hard drive without you noticing?", "ans": "Second-pre-image resistance is stopping the attacker. The attacker needs to find an input that gives the same hash as a certain other input: the cat picture."},
  {"ques": "Lisa is currently rewarded 7,200 CT per day for her work. Why won't the supply increase infinitely over time?", "ans": "The money supply increase rate will decrease over time because the reward to Lisa halves every 4 years. This means the total amount of CT to ever be created will be about 21,000,000."},
  {"ques": "How can coworkers detect if Lisa rewards herself too much or too often?", "ans": "The coworkers have read access to the spreadsheet. They can watch the spreadsheet and verify that Lisa doesn't reward herself too much or too often."},
  {"ques": "How is the private key of a key pair created?", "ans": "The private key is created using a random number generator of some sort. A simple one is a coin that you flip 256 times to generate your 256-bit private key. You can also use your operating system's built-in random number generator."},
  {"ques": "What key is used to digitally sign a message?", "ans": "The private key."},
  {"ques": "The signing process hashes the message to sign. Why?", "ans": "The message is hashed because you want signatures to be small and fixed in size. You don't want the signatures to be big just because the signed message is big."},
  {"ques": "What would Mallory need to steal cookie tokens from John?", "ans": "Mallory would need John's private key to steal cookies from him. She would also need his name, John, to write into the email to Lisa, but that's easily available in the spreadsheet."},
  {"ques": "How can Fred send you a secret message that only you can understand?", "ans": "Fred can use your public key to encrypt the message and send the encrypted message to you. You can then decrypt that message using your private key."},
  {"ques": "How would you sign a message so Fred can be sure the message is actually from you?", "ans": "You sign the message using your private key and write the digital signature onto the note in the bottle. Fred can then verify that the signature is in fact made with your private key. He does this by using your public key to decrypt the signature and comparing the decrypted hash with the actual hash of the message. If they match, he can be sure the message is from you."},
  {"ques": "Why is the PKH shorter than the public key?", "ans": "The PKH is made short because a) it makes the spreadsheet smaller in size and b) it makes cookie token addresses (and Bitcoin addresses) shorter to write for a user."},
  {"ques": "Is it possible to reverse base58check encoding to create a PKH from an address?", "ans": "Yes, you can. There's a base58check decoding algorithm that does this."},
  {"ques": "When is base58check decoding used, and by whom?", "ans": "It's used by a payer to translate the recipient's address into a PKH. The payer needs to write the recipient's PKH in the email to Lisa."},
  {"ques": "What in an address makes it mostly safe from typing errors?", "ans": "The 4-byte checksum."},
  {"ques": "How could John pay 10 CT to the cafe if he has two addresses with balances of 5 CT and 8 CT?", "ans": "He must make two separate payments. For example: payment 1 pays 2 CT from @1 to the cafe, and payment 2 pays 8 CT from @2 to the cafe. Another way is to first pay 2 CT from @1 to @2 and then pay 10 CT from @2 to the cafe."},
  {"ques": "Is it possible to deduce what cookie token addresses were involved in a certain payment by looking at the spreadsheet?", "ans": "Yes it is. Base58check-encode the PKHs to get the addresses."},
  {"ques": "Is it possible to deduce what public keys were involved in a certain payment by looking at just the spreadsheet?", "ans": "No, because the spreadsheet contains PKHs. Because cryptographic hash functions are one-way functions, you can't go from PKH to public key."},
  {"ques": "What information from the spreadsheet could Acme use to roughly identify the cafe's addresses?", "ans": "They can look at the amounts. Many of the 10 CT payments are probably cookie purchases."},
  {"ques": "What prevents a bad guy from stealing your money if there was a serious flaw in the public key derivation function?", "ans": "The bad guy can't steal cookie tokens because he needs the public key to exploit the flaw in the public key derivation function. The spreadsheet contains PKHs; the bad guy can't get the public key from it."},
  {"ques": "What prevents a bad guy from stealing your money if there was a serious flaw in RIPEMD160?", "ans": "The bad guy needs the private key to sign fraudulent emails to Lisa. Even though he can reverse RIPEMD160, he'd still need to pre-image attack SHA256 and reverse the public key derivation function to get to a working private key."},
  {"ques": "Construct a payment URI to receive 50 BTC to your Bitcoin address 155gWNamPrwKwu5D6JZdaLVKvxbpoKsp5S.", "ans": "bitcoin:155gWNamPrwKwu5D6JZdaLVKvxbpoKsp5S?amount=50"},
  {"ques": "How many coin flips does a random password of 10 characters correspond to?", "ans": "Each character corresponds to 6 bits of entropy because 2^6 = 64. Ten such characters make 60 bits of entropy, which corresponds to 60 coin flips."},
  {"ques": "Name problems with password-protected backups.", "ans": "The four problems: Passwords are easily forgotten. Randomness is hard. The security of a password decreases as technology improves. You need to keep track of two items: the backup and the password. This increases the risk that the backup is lost."},
  {"ques": "What three major steps are involved when a seed is created in an HD wallet that uses mnemonic sentences?", "ans": "The seed is created by first generating a huge random number, then the random number is encoded as a mnemonic sentence, and lastly, the mnemonic sentence is used to generate the seed."},
  {"ques": "What does an xprv consist of?", "ans": "An xprv consists of a private key and a chain code."},
  {"ques": "What does an xpub consist of?", "ans": "An xpub consists of a public key and a chain code."},
  {"ques": "What information do you need to create m/2/1/7'?", "ans": "The xprv at path m/2/1 and the wanted index 7."},
  {"ques": "Can you derive xpub M/2/1/7' from M/2/1?", "ans": "No, you would need xprv m/2/1 to derive xpub M/2/1/7'. You first derive hardened xprv m/2/1/7' from m/2/1 using hardened xprv derivation and then calculate the xpub M/2/1/7' from m/2/1/7'."},
  {"ques": "How would you calculate the master xprv if you have the master xpub and a stolen private key m/4/1?", "ans": "You can use the following procedure to get the master xprv: Use master xpub M to derive xpub M/4 and remember the left-half hash, L4. Use M/4 to derive the left-half hash L41 at index 1. Subtract L41 from the private key m/4/1 to get private key m/4. Subtract L4 from the private key m/4 to get private key m. m together with the chain code of xpub M is the master xprv."},
  {"ques": "Would you be able to steal any money if your victim had 0 bitcoins on the private key m/4/1 but plenty on other addresses under the same xprv?", "ans": "Yes, you'd be able to steal all funds in any addresses because you can calculate the master xprv."},
  {"ques": "What approach could a victim use to prevent you from stealing all their money?", "ans": "The victim could have used hardening to generate m/4' instead. This way, you wouldn't be able to get the master xprv. If you stole m/4'/1 and the master xpub, you would only be able to steal funds on the m/4'/1 key. You wouldn't be able to calculate the M/4' xpub."},
  {"ques": "How can a cafe owner allow employees to create new addresses without giving them access to private keys?", "ans": "The employees can import the xpub for the counter sales account. They will then be able to generate any public keys under that account and thus generate as many addresses as they need without ever having to know any private keys."},
  {"ques": "How would you notice when your colleague Anita has received money into a previously empty key?", "ans": "Your (and Anita's) wallet can generate 10 addresses ahead of time and monitor the spreadsheet for those addresses. If Anita gets paid to one of these addresses—probably the first of those 10—then your wallet won't reuse that address when you request a payment from a customer. You would instead take the next unused address."},
  {"ques": "Which outputs would you spend to buy a cookie for 10 CT if your money is spread over three UTXOs: 4 CT, 7 CT, and 2 CT?", "ans": "You would spend the 4 CT and the 7 CT outputs. The new outputs would be 10 CT to the cafe and 1 CT in change to an address you control."},
  {"ques": "What are txids used for in a transaction?", "ans": "They're used in inputs to reference transactions from which to spend outputs."},
  {"ques": "Why do you usually need to add a change output in your transaction?", "ans": "Because you can't spend part of a transaction output. You either spend the output or you don't. If the spent output contains more value than you're paying, you need to give back change to yourself."},
  {"ques": "Where are the signatures located in a transaction?", "ans": "In the signature scripts in the inputs."},
  {"ques": "Why is the public key needed in the input of a transaction if it spends a p2pkh output?", "ans": "Because the verifiers need to know what public key to verify the signature with. You can't verify the signature with a PKH, so you need to explicitly reveal the public key in the signature script."},
  {"ques": "Why are the signature scripts of a transaction cleaned when your wallet signs the transaction?", "ans": "The signature scripts are cleaned so that verifiers don't have to know the order in which the inputs are signed."},
  {"ques": "Where are the pubkey scripts located in a transaction, and what do they contain?", "ans": "Each output of a transaction contains a pubkey script. It contains the second part of a script program. The first part will be provided later, when the output is spent."},
  {"ques": "What's required from a Script program for an input to be considered authentic?", "ans": "The Script program must end with OK on top of the stack."},
  {"ques": "How can you recognize a p2sh address?", "ans": "A p2sh address always starts with a 3. You can also recognize it by base58check-decoding it and looking at the first byte. If that byte is 05, it's a p2sh address."},
  {"ques": "How many UTXOs will the UTXO set contain after a transaction with two inputs and five outputs is confirmed?", "ans": "10,003 UTXOs. You remove two UTXOs by spending two outputs, and you add five new UTXOs. The net effect on the UTXO set is thus +3 UTXOs."},
  {"ques": "How does a block in the blockchain refer to the previous block?", "ans": "By the previous block's block ID, which is the hash of the previous block's header."},
  {"ques": "What information does the merkle root commit to?", "ans": "The merkle root of a block commits to all transactions in that block."},
  {"ques": "What information does Lisa's block signature commit to?", "ans": "Lisa's block signature commits to the timestamp, the merkle root (and indirectly all transactions in this block), and the previous block ID (and indirectly the whole blockchain before this block)."},
  {"ques": "How are new cookie tokens (or bitcoins) created?", "ans": "The first transaction in each block is a coinbase transaction. This coinbase transaction creates 50 new cookie tokens and sends them to Lisa's cookie token address."},
  {"ques": "What transactions would match a bloom filter containing only 1s?", "ans": "All transactions. The hash functions will all result in an index containing 1 because there are no zeroes in the bloom filter. Any item in the transaction that you test will be a positive."},
  {"ques": "Why aren't the hash functions used to create the bloom filter cryptographic hash functions?", "ans": "They aren't pre-image resistant, collision resistant, or second-pre-image resistant. The output space is small—typically just a few hundred to a few thousand numbers. It will take only a fraction of a second to find a pre-image of, for example, 172."},
  {"ques": "In what way was Lisa a central authority?", "ans": "She single-handedly decides what transactions get confirmed."},
  {"ques": "Why would the possibility of censoring transactions decrease with multiple miners?", "ans": "The probability of censorship will decrease because all miners must cooperatively decide to censor a transaction to succeed. Otherwise, your transactions will eventually be confirmed by some noncolluding miner."},
  {"ques": "Why was the idea of drawing random numbers naive?", "ans": "Miners can cheat with random numbers. You can't prove whether a miner cheated."},
  {"ques": "How do you check if a proof of work is valid?", "ans": "Verify that the block ID of a block is lower than the target in the block header, and that the target is the agreed-on target."},
  {"ques": "How does a miner generate a valid proof of work?", "ans": "By repeatedly changing the nonce and hashing (double SHA256) the block header until the block ID (the block header hash) is lower than the target."},
  {"ques": "What is meant by strongest chain?", "ans": "The branch with the most accumulated proof of work. This isn't necessarily the same as the branch with the most blocks."},
  {"ques": "What does it mean when a miner has the hashrate 100 Mhash/s?", "ans": "A miner with a hashrate of 100 Mhash/s can perform 100,000,000 tries per second to find a valid proof of work."},
  {"ques": "Will the target increase or decrease if the last 2,016 blocks took 15 days to produce?", "ans": "The target will increase. If the 2,016 blocks take 15 days instead of the goal of 14 days, then it's too hard to find blocks, so you need to decrease the difficulty, which means increasing the target."},
  {"ques": "At what percentage of the hashrate can you be certain to pull off a double spend?", "ans": "50%. But if you plan to give up at some point, your chances will decrease."},
  {"ques": "Why is a big block less likely to become part of the strongest chain compared to a small block?", "ans": "The small block will reach the other miners more quickly than the big block because a smaller block travels a computer network faster than a big block. The small block is probably also quicker to verify than the big block. Miners will probably download and verify the small block faster than the big block and continue their mining activity on top of the small block, which gives the small block a higher probability of becoming part of the strongest chain."},
  {"ques": "Why is the shared folder a bad idea?", "ans": "The shared folder is a bad idea because it gives the shared folder administrator absolute power over what blocks to allow. Also, if the administrator decides to start mining, he can shut off all competition and have complete power of the system."},
  {"ques": "What does it mean to relay a transaction or a block?", "ans": "To relay a block or a transaction means to pass it on to peers."},
  {"ques": "What are inv messages used for?", "ans": "An inv message is used to announce to peers that you have a certain block or transaction; inv stands for inventory."},
  {"ques": "How does the full node decide what transactions to send to lightweight wallets?", "ans": "It will run the transaction through the bloom filter it got from the wallet. If any tested item in the transaction matches the filter, the node will send the transaction to the lightweight wallet."},
  {"ques": "How does a node notify a lightweight wallet about an incoming pending transaction?", "ans": "The full node sends an inv to the lightweight wallet after consulting the bloom filter. The wallet can then fetch the transaction if it doesn't already have it."},
  {"ques": "What part of the block is always sent to the lightweight wallet?", "ans": "The block header."},
  {"ques": "Why does the cafe send a very big bloom filter to its trusted node?", "ans": "Because the cafe doesn't have to obfuscate to its trusted node what addresses belong to the wallet. It sends a very big bloom filter to save data traffic on its mobile phone; a bloom filter that contains mostly zeroes will send almost no false positives."},
  {"ques": "What would a security-conscious person do after downloading Bitcoin Core but before starting the software?", "ans": "She would verify the signature of the program using the public key she knows belongs to the Bitcoin Core development team. She does this to avoid being tricked into running malicious software."}
]
